name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: "Select the environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - uat
  push:
    branches:
      - main

# Give the workflow permission to deploy the Pages site
permissions:
  contents: read  
  pages: write      
  id-token: write 

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.49.1-noble   # If we update playwright version in project, the PW docker image version need to update accordingly.
    environment: ${{ github.event.inputs.ENVIRONMENT || 'staging' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Generate .env file
        run: |
          echo "URL=${{ secrets.URL }}" >> .env
          echo "USERNAME=${{ secrets.USERNAME }}" >> .env
          echo "PASSWORD=\"${{ secrets.PASSWORD }}\"" >> .env

# Use the following code to cache Node.js modules and Playwright browsers
      # - name: Cache Node.js modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # - name: Cache Playwright Browsers
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-playwright-browsers-

      - name: Install dependencies
        run: npm ci
        
# As we are using the Playwright Docker image, we don't need to install the browsers, if we use the cache, we can uncomment this step
      # - name: Install Playwright Browsers
      #   run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=html

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Configure GitHub Pages
        if: always()
        uses: actions/configure-pages@v5

      - name: Upload Pages Artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report/

  # Deploy Playwright report to GitHub Pages
  deploy:
    if: always()
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy test report to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4